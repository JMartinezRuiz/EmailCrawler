#!/usr/bin/env python3
# aba1.py

import re
import sys

# ─── CONFIGURACIÓN ─────────────────────────────────────────────────────────────
FICHERO         = "ruta/al/fichero1.txt"  # Ruta al fichero de texto de entrada
SHOW_DUPLICATES = False                   # True: muestra duplicados; False: omite duplicados
# ────────────────────────────────────────────────────────────────────────────────

# Patrón para extraer el ABA: tres espacios, 'ABA', tres espacios, seguido de 9 dígitos
PATRON_ABA = re.compile(r"\s{3}ABA\s{3}(\d{9})")


def extrae_aba1(fichero: str, show_dups: bool):
    """
    Lee cada línea de 'fichero', busca todas las ocurrencias del patrón
    '   ABA   123456789' y extrae los 9 dígitos. Ignora líneas sin coincidencias.
    Si show_dups es False, omite valores repetidos.

    Soporta ficheros con encoding UTF-8 o ISO-8859-1 (Latin-1).
    """
    vistos = set()
    # Intentar abrir con distintos encodings
    file_obj = None
    for enc in ('utf-8', 'latin-1'):
        try:
            file_obj = open(fichero, encoding=enc)
            break
        except (UnicodeDecodeError, FileNotFoundError) as e:
            # Saltar al siguiente encoding si es error de decoding
            if isinstance(e, FileNotFoundError):
                print(f"ERROR: No se encontró el fichero '{fichero}'.", file=sys.stderr)
                sys.exit(1)
            continue

    if file_obj is None:
        print(f"ERROR: No se pudo leer el fichero '{fichero}' en UTF-8 ni Latin-1.", file=sys.stderr)
        sys.exit(1)

    with file_obj as f:
        for linea in f:
            # Buscar todos los patrones en la línea
            for match in PATRON_ABA.finditer(linea):
                aba = match.group(1)
                if show_dups or aba not in vistos:
                    print(aba)
                    vistos.add(aba)


if __name__ == "__main__":
    extrae_aba1(FICHERO, SHOW_DUPLICATES)
